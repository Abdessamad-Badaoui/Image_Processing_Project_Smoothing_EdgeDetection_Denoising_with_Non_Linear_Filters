y[i] = rpois(1, thetaInitial[zInitial[i]])
}
N = 10000
thetat = sample(1:20, size=K, replace=TRUE)
zt = sample(1:K, size = n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
thetaInitial
moyenneThetat
propInit = c(1:K)*0
propMelange = c(1:K)*0
for (k in 1:K) {
for (j in 1:n) {
if (zInitial[j] == k) {
propInit[k] = propInit[k] + 1
}
}
}
propInit <- propInit/n
print(paste("La liste des espérance de θk utilisés pour générer y est : ", "[", toString(thetaInitial), "]", sep = ""))
print(paste("La liste des espérance de θk sachant y est : ", "[", toString(moyenneThetat), "]", sep = ""))
print(paste("La liste des proportions des composantes du mélange est : ", "[", toString(propInit), "]", sep = ""))
print(paste("La liste des estimations des proportions des composantes du mélange est : ", "[", toString(moyennePropnk), "]", sep = ""))
K = 4
n = 200
thetaInitial = c(3, 10, 20, 30)
zInitial = sample(1:K, size = n, replace = TRUE)
y = c(1:n)
for (i in 1:n) {
y[i] = rpois(1, thetaInitial[zInitial[i]])
}
N = 10000
thetat = sample(1:20, size=K, replace=TRUE)
zt = sample(1:K, size = n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
propInit = c(1:K)*0
propMelange = c(1:K)*0
for (k in 1:K) {
for (j in 1:n) {
if (zInitial[j] == k) {
propInit[k] = propInit[k] + 1
}
}
}
propInit <- propInit/n
print(paste("La liste des espérance de θk utilisés pour générer y est : ", "[", toString(thetaInitial), "]", sep = ""))
print(paste("La liste des espérance de θk sachant y est : ", "[", toString(moyenneThetat), "]", sep = ""))
print(paste("La liste des proportions des composantes du mélange est : ", "[", toString(propInit), "]", sep = ""))
print(paste("La liste des estimations des proportions des composantes du mélange est : ", "[", toString(moyennePropnk), "]", sep = ""))
K = 3
y = c(6, 1, 2, 3, 1, 1, 5, 1, 1, 2, 3, 3, 2, 4, 3, 1, 5, 0, 7, 2, 1, 2, 2, 5, 3, 3, 1, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 4, 1, 0, 0, 1, 3, 3, 1, 3, 1, 3, 10, 19, 15, 12, 9, 13, 14, 16, 18, 12, 15, 8, 10, 10, 7, 6, 14, 6, 14, 7, 8, 13, 8, 14, 18, 14, 15, 8, 8, 13, 12, 7, 12, 10, 13, 10, 7, 16, 12, 8, 16, 11, 13, 8, 10, 9, 14, 13, 18, 8, 9, 11, 10, 8, 11, 8, 10, 10, 12, 9, 8, 13, 20, 11, 9, 12, 13, 15, 11, 9, 10, 12, 8, 11, 21, 12, 8, 11, 13, 10, 18, 14, 17, 9, 16, 12, 20, 14, 13, 8, 13, 14, 12, 17, 7, 12, 16, 16, 14, 10, 18, 13, 12, 12, 10, 13, 11, 10, 11, 10, 12, 11, 12, 15, 10, 8, 10, 12, 10, 9, 11, 10, 8, 15, 13, 24, 24, 25, 24, 16, 22, 13, 25, 21, 22, 31, 28, 17, 29, 25, 28, 21, 26, 36, 20, 20, 12, 29, 28, 29, 29, 26)
n = length(y)
N = 10000
thetat = sample(1:36, size = K)
zt = sample(1:K, size=n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
moyenneThetat
moyennePropnk
hist(y, prob = TRUE)
thetaMelange = sum(moyenneThetat*moyennePropnk)
x = 0:max(y)
yMelange = c(1:length(x))*0
for (i in 1:length(x)) {
for (k in 1:K) {
yMelange[i] = yMelange[i] + moyennePropnk[k]*dpois(x[i], moyenneThetat[k])
}
}
points(x, yMelange, type = 'l')
for (iterateur in 2:5) {
K = 3
y = c(6, 1, 2, 3, 1, 1, 5, 1, 1, 2, 3, 3, 2, 4, 3, 1, 5, 0, 7, 2, 1, 2, 2, 5, 3, 3, 1, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 4, 1, 0, 0, 1, 3, 3, 1, 3, 1, 3, 10, 19, 15, 12, 9, 13, 14, 16, 18, 12, 15, 8, 10, 10, 7, 6, 14, 6, 14, 7, 8, 13, 8, 14, 18, 14, 15, 8, 8, 13, 12, 7, 12, 10, 13, 10, 7, 16, 12, 8, 16, 11, 13, 8, 10, 9, 14, 13, 18, 8, 9, 11, 10, 8, 11, 8, 10, 10, 12, 9, 8, 13, 20, 11, 9, 12, 13, 15, 11, 9, 10, 12, 8, 11, 21, 12, 8, 11, 13, 10, 18, 14, 17, 9, 16, 12, 20, 14, 13, 8, 13, 14, 12, 17, 7, 12, 16, 16, 14, 10, 18, 13, 12, 12, 10, 13, 11, 10, 11, 10, 12, 11, 12, 15, 10, 8, 10, 12, 10, 9, 11, 10, 8, 15, 13, 24, 24, 25, 24, 16, 22, 13, 25, 21, 22, 31, 28, 17, 29, 25, 28, 21, 26, 36, 20, 20, 12, 29, 28, 29, 29, 26)
n = length(y)
N = 10000
thetat = sample(1:36, size = K)
zt = sample(1:K, size=n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
hist(y, prob = TRUE)
thetaMelange = sum(moyenneThetat*moyennePropnk)
x = 0:max(y)
yMelange = c(1:length(x))*0
for (i in 1:length(x)) {
for (k in 1:K) {
yMelange[i] = yMelange[i] + moyennePropnk[k]*dpois(x[i], moyenneThetat[k])
}
}
points(x, yMelange, type = 'l')
}
for (iterateur in 2:5) {
K = iterateur
y = c(6, 1, 2, 3, 1, 1, 5, 1, 1, 2, 3, 3, 2, 4, 3, 1, 5, 0, 7, 2, 1, 2, 2, 5, 3, 3, 1, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 4, 1, 0, 0, 1, 3, 3, 1, 3, 1, 3, 10, 19, 15, 12, 9, 13, 14, 16, 18, 12, 15, 8, 10, 10, 7, 6, 14, 6, 14, 7, 8, 13, 8, 14, 18, 14, 15, 8, 8, 13, 12, 7, 12, 10, 13, 10, 7, 16, 12, 8, 16, 11, 13, 8, 10, 9, 14, 13, 18, 8, 9, 11, 10, 8, 11, 8, 10, 10, 12, 9, 8, 13, 20, 11, 9, 12, 13, 15, 11, 9, 10, 12, 8, 11, 21, 12, 8, 11, 13, 10, 18, 14, 17, 9, 16, 12, 20, 14, 13, 8, 13, 14, 12, 17, 7, 12, 16, 16, 14, 10, 18, 13, 12, 12, 10, 13, 11, 10, 11, 10, 12, 11, 12, 15, 10, 8, 10, 12, 10, 9, 11, 10, 8, 15, 13, 24, 24, 25, 24, 16, 22, 13, 25, 21, 22, 31, 28, 17, 29, 25, 28, 21, 26, 36, 20, 20, 12, 29, 28, 29, 29, 26)
n = length(y)
N = 10000
thetat = sample(1:36, size = K)
zt = sample(1:K, size=n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
hist(y, prob = TRUE)
thetaMelange = sum(moyenneThetat*moyennePropnk)
x = 0:max(y)
yMelange = c(1:length(x))*0
for (i in 1:length(x)) {
for (k in 1:K) {
yMelange[i] = yMelange[i] + moyennePropnk[k]*dpois(x[i], moyenneThetat[k])
}
}
points(x, yMelange, type = 'l')
}
for (iterateur in 1:5) {
K = iterateur
y = c(6, 1, 2, 3, 1, 1, 5, 1, 1, 2, 3, 3, 2, 4, 3, 1, 5, 0, 7, 2, 1, 2, 2, 5, 3, 3, 1, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 4, 1, 0, 0, 1, 3, 3, 1, 3, 1, 3, 10, 19, 15, 12, 9, 13, 14, 16, 18, 12, 15, 8, 10, 10, 7, 6, 14, 6, 14, 7, 8, 13, 8, 14, 18, 14, 15, 8, 8, 13, 12, 7, 12, 10, 13, 10, 7, 16, 12, 8, 16, 11, 13, 8, 10, 9, 14, 13, 18, 8, 9, 11, 10, 8, 11, 8, 10, 10, 12, 9, 8, 13, 20, 11, 9, 12, 13, 15, 11, 9, 10, 12, 8, 11, 21, 12, 8, 11, 13, 10, 18, 14, 17, 9, 16, 12, 20, 14, 13, 8, 13, 14, 12, 17, 7, 12, 16, 16, 14, 10, 18, 13, 12, 12, 10, 13, 11, 10, 11, 10, 12, 11, 12, 15, 10, 8, 10, 12, 10, 9, 11, 10, 8, 15, 13, 24, 24, 25, 24, 16, 22, 13, 25, 21, 22, 31, 28, 17, 29, 25, 28, 21, 26, 36, 20, 20, 12, 29, 28, 29, 29, 26)
n = length(y)
N = 10000
thetat = sample(1:36, size = K)
zt = sample(1:K, size=n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
hist(y, prob = TRUE, main = paste("Histogramme y pour K = ", toString(K)))
thetaMelange = sum(moyenneThetat*moyennePropnk)
x = 0:max(y)
yMelange = c(1:length(x))*0
for (i in 1:length(x)) {
for (k in 1:K) {
yMelange[i] = yMelange[i] + moyennePropnk[k]*dpois(x[i], moyenneThetat[k])
}
}
points(x, yMelange, type = 'l')
}
for (iterateur in 1:5) {
K = iterateur
y = c(6, 1, 2, 3, 1, 1, 5, 1, 1, 2, 3, 3, 2, 4, 3, 1, 5, 0, 7, 2, 1, 2, 2, 5, 3, 3, 1, 3, 1, 1, 4, 1, 5, 4, 2, 4, 1, 4, 1, 0, 0, 1, 3, 3, 1, 3, 1, 3, 10, 19, 15, 12, 9, 13, 14, 16, 18, 12, 15, 8, 10, 10, 7, 6, 14, 6, 14, 7, 8, 13, 8, 14, 18, 14, 15, 8, 8, 13, 12, 7, 12, 10, 13, 10, 7, 16, 12, 8, 16, 11, 13, 8, 10, 9, 14, 13, 18, 8, 9, 11, 10, 8, 11, 8, 10, 10, 12, 9, 8, 13, 20, 11, 9, 12, 13, 15, 11, 9, 10, 12, 8, 11, 21, 12, 8, 11, 13, 10, 18, 14, 17, 9, 16, 12, 20, 14, 13, 8, 13, 14, 12, 17, 7, 12, 16, 16, 14, 10, 18, 13, 12, 12, 10, 13, 11, 10, 11, 10, 12, 11, 12, 15, 10, 8, 10, 12, 10, 9, 11, 10, 8, 15, 13, 24, 24, 25, 24, 16, 22, 13, 25, 21, 22, 31, 28, 17, 29, 25, 28, 21, 26, 36, 20, 20, 12, 29, 28, 29, 29, 26)
n = length(y)
N = 10000
thetat = sample(1:36, size = K)
zt = sample(1:K, size=n, replace=TRUE)
estimationThetak = c(1:((N-N/2)*K))
estimationPropnk = c(1:((N-N/2)*K))
for (i in 1:N) {
for (j in 1:n) {
listProbaZi = c(1:K)
somme = 0
for (k in 1:K) {
pZiEgalk = ((thetat[k]**(y[j]))*(exp(-thetat[k])))
listProbaZi[k] = pZiEgalk
somme = somme + pZiEgalk
}
listProbaZi = listProbaZi/somme
zj = sample(1:K, size = 1, prob = listProbaZi)
zt[j] = zj
}
for (k in 1:K) {
sommeYIk = 0
nk = 0
for (j in 1:n) {
if (zt[j] == k) {
sommeYIk = sommeYIk + y[j]
nk = nk + 1
}
if (i > N/2) {
estimationPropnk[(N-N/2)*(k-1) + i-N/2] = nk/n
}
}
thetak = rgamma(1, shape = sommeYIk, rate = nk)
thetat[k] = thetak
if (i > N/2) {
estimationThetak[(N-N/2)*(k-1) + i-N/2] = thetak
}
}
}
moyenneThetat = c(1:K)
moyennePropnk = c(1:K)
for (k in 1:K) {
estimationThetaIndicek = c(1:(N-N/2))
estimationPropIndicek = c(1:(N-N/2))
for (i in (1+(N-N/2)*(k-1)):((N-N/2)*k)) {
estimationThetaIndicek[i-(N-N/2)*(k-1)] = estimationThetak[i]
estimationPropIndicek[i-(N-N/2)*(k-1)] = estimationPropnk[i]
}
moyenneThetat[k] = mean(estimationThetaIndicek)
moyennePropnk[k] = mean(estimationPropIndicek)
}
moyenneThetat
hist(y, prob = TRUE, main = paste("Histogramme y pour K = ", toString(K)))
thetaMelange = sum(moyenneThetat*moyennePropnk)
x = 0:max(y)
yMelange = c(1:length(x))*0
for (i in 1:length(x)) {
for (k in 1:K) {
yMelange[i] = yMelange[i] + moyennePropnk[k]*dpois(x[i], moyenneThetat[k])
}
}
points(x, yMelange, type = 'l')
}
# créer deux vecteurs
vecteur1 <- c(1, 2, 3)
vecteur2 <- c(4, 5, 6)
# construire la matrice produit cartésien
matrice <- outer(vecteur1, vecteur2)
# afficher la matrice
matrice
quit()
quit()
install.packages("akima")
quit()
getwd()
setwd("~/MMIS-2a/Semestre2/TraitementImage/TP/code_src"
)
getwd()
x <- scan("hist_values.txt")
x
hist(x)
hist(x)
lines(density(x))
lines(density(x), col = "blue")
density(x)
x1 <- density(x)
x1
lines(x1)
hist(x)
lines(x1)
lines(density(x), col = "blue", lwd = 2)
# Generate a vector of random data
x <- runif(1000)

# Create a histogram with 20 bins
hist(x, breaks = 20, col = "gray", main = "Histogram with Density Curve")

# Add a density curve on top of the histogram
lines(density(x), col = "blue", lwd = 2)

hist(x, Prob = TRUE)
hist(x, Freq = TRUE)
hist(x, Freq = FALSE)
hist(x, Freq = FALSE)
hist(x, probability=false)
hist(x, probability=FALSE)

x <- scan("hist_values.txt")
hist(x, probability=FALSE)
lines(density(x), col = "blue")
hist(x, probability=TRUE)
lines(density(x), col = "blue")
lines(density(x), col = "blue")
hist(x, probability=TRUE)
lines(density(x), col = "blue")
hist(x, probability=TRUE, main = "Histogramme du bruit de formesbb20.png")
lines(density(x), col = "blue")
png("detection_bruit_formesbb20.png", width = 800, height = 600, res = 120)
hist(x, probability=TRUE, main = "Histogramme du bruit de formesbb20.pgm")
lines(density(x), col = "blue")
dev.off()
hist
history()
quit()
